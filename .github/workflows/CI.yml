# This file is autogenerated by maturin v1.4.0
# To update, run
#
#    maturin generate-ci github
#
name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
      - dev
  workflow_dispatch:
  release:
    types: [created]

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - {os: ubuntu-latest, arch: "x86_64", python-version: "3.10"}
          - {os: ubuntu-latest, arch: "aarch64", python-version: "3.10"} # ARM64
          - {os: ubuntu-latest, arch: "armv7l", python-version: "3.10"}  # ARMv7
          - {os: ubuntu-latest, arch: "i386", python-version: "3.10"}    # x86 (32-bit)

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install required libraries
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y -qq libasound2-dev libssl-dev libpulse-dev libdbus-1-dev portaudio19-dev pkg-config
          if [ "${{ matrix.arch }}" = "armv7" ] || [ "${{ matrix.arch }}" = "aarch64" ]; then
            sudo apt-get install -y crossbuild-essential-armhf crossbuild-essential-arm64
          fi
          echo "RUST_BACKTRACE=1" >> $GITHUB_ENV
      - name: Setup QEMU
        if: matrix.arch != 'x64'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: find alsa.pc
        run: |
          find /usr -name alsa.pc

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          command: build
          sccache: 'true'
          args: --release --out dist --interpreter python${{ matrix.python-version }}
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux, sdist]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing *