# This file is autogenerated by maturin v1.4.0
# To update, run
#
#    maturin generate-ci github
#
name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
      - dev
  workflow_dispatch:
  release:
    types: [created]

permissions:
  contents: read

jobs:
  linux:
    needs: [ generate-license ]
    name: Manylinux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: rm LICENSE.txt
      - name: Download LICENSE.txt
        uses: actions/download-artifact@v3
        with:
          name: python-wheel-license
      - run: cat LICENSE.txt
      - name: Build wheels
        run: |
          export RUSTFLAGS='-C target-cpu=skylake'
          rm ../ballista/core/proto/*
          docker run --rm -v $(pwd)/..:/io \
            --workdir /io/python \
            ghcr.io/pyo3/maturin:v0.13.7 \
            build --release --manylinux 2010
      - name: Archive wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

#  linux:
##    name: Build ${{ matrix.build_target }}-python${{matrix.python-version}}
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        python-version:
#          - "3.8"
#          - "3.9"
##          - "3.10"
##          - "3.11"
##          - "3.12"
#        target: ["x86_64"]
#
#    steps:
#      - uses: actions/checkout@v4
#      - uses: actions/setup-python@v4
#        with:
#          python-version: ${{ matrix.python-version }}
#
#      - name: Install required libraries
#        shell: bash
#        run: |
#          sudo apt-get update
#          sudo apt-get install -y -qq libasound2-dev libssl-dev pkg-config
#
#      - name: Build wheels
#        uses: PyO3/maturin-action@v1
#        with:
#          target: ${{ matrix.target }}
#          command: build
#          sccache: 'true'
#          args: --release --out dist --interpreter python${{ matrix.python-version }}
#      - name: Upload wheels
#        uses: actions/upload-artifact@v3
#        with:
#          name: wheels
#          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux, sdist]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing *