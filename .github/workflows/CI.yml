# This file is autogenerated by maturin v1.4.0
# To update, run
#
#    maturin generate-ci github
#
name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
      - dev
  workflow_dispatch:
  release:
    types: [created]

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: ["x86"]
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: install rust stable
        id: rust-toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools
      - name: Install required libraries
        shell: bash
        run: |
          sudo apt-get update && sudo apt-get install g++ pkg-config libx11-dev libasound2-dev libudev-dev
          echo "RUST_BACKTRACE=1" >> $GITHUB_ENV
      - name: find alsa.pc
        run: |
          find /usr -name alsa.pc

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          command: build
          sccache: 'true'
          args: --release --out dist --interpreter python${{ matrix.python-version }}
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist
#  windows:
#    runs-on: windows-latest
#    strategy:
#      matrix:
#        target: [ x64, x86 ]
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-python@v4
#        with:
#          python-version: '3.10'
#          architecture: ${{ matrix.target }}
#      - name: Build wheels
#        uses: PyO3/maturin-action@v1
#        with:
#          target: ${{ matrix.target }}
#          args: --release --out dist --find-interpreter
#          sccache: 'true'
#      - name: Upload wheels
#        uses: actions/upload-artifact@v3
#        with:
#          name: wheels
#          path: dist
#
#  macos:
#    runs-on: macos-latest
#    strategy:
#      matrix:
#        target: [ x86_64, aarch64 ]
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-python@v4
#        with:
#          python-version: '3.10'
#      - name: Build wheels
#        uses: PyO3/maturin-action@v1
#        with:
#          target: ${{ matrix.target }}
#          args: --release --out dist --find-interpreter
#          sccache: 'true'
#      - name: Upload wheels
#        uses: actions/upload-artifact@v3
#        with:
#          name: wheels
#          path: dist


  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux, sdist]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing *